# Howto use the beamer style:
#
# Use Chapters (underline with #) to set title in overview
# Use special Chapter name Outline to create outline slide
# Use Section (underline with ) to set current slide caption
# Use subsection (underline with ) to set current slide caption
# to animate insert a "\pause" after an item (it will be printed as is into
#   the generated tex source

### WRITE HEADER OF TEX FILE ###
proc produce_head_latex {} {
	global title authors
	
	puts {\documentclass{beamer}}
	puts {\usetheme{Darmstadt}}
	puts {\setbeamercovered{transparent}}
	puts {\usepackage[latin1]{inputenc}}
	puts {\usepackage{graphicx}}
	puts {\usepackage{epsfig}}
	
	if {$title != ""} {
		puts "\\title{[out_latex $title]}"
		if {$authors != ""} {
			puts "\\author{[out_latex $authors]}"
		}
		puts {\date{\today}}
	}

	puts {\begin{document}}
	puts {\frame{\maketitle}}
}

### END OF DOCUMENT ###
proc produce_tail_latex {} {
	puts {\end{document}}
}

### ABSTRACT ###
proc process_abstract_latex {txtblock} {
	set title [lindex $txtblock 0]
	puts "\n[indent]%     -+*|\[ [string toupper $title] \]|*+-\n"
	puts "[indent]\\center{"
	handle_txtblock abstract [lrange $txtblock 2 end]
	puts "[indent]}"
}

### CHAPTER ###
proc process_chapter_latex {txtblock} {
	global curr_chapter
	set title [lindex $txtblock 0]
	set curr_chapter $title
	if {$title == "Outline"} {
		puts "\\section\[Outline\]{}\n"
		puts "\\frame{\\tableofcontents}\n"
	} else {
		puts "\n[indent]%     -+*|\[ [string toupper $title] \]|*+-\n"
		puts "[indent]\\section{[out_latex $title]}\n"
		handle_txtblock chapter [lrange $txtblock 2 end]
	}
}

### SECTION ###
proc process_section_latex {txtblock} {
	global curr_chapter curr_section depth
	set title [lindex $txtblock 0]
	set curr_section $title
	puts "\n[indent]%     -+*|\[ [string toupper $title] \]|*+-\n"
	puts "[indent]\\subsection{[out_latex $title]}\n"
	puts "[indent]\\frame"
	puts "[indent]{"
	incr depth
	handle_txtblock section [lrange $txtblock 2 end]
	incr depth -1
	puts "[indent]}"
}

### SUBSECTION ###
proc process_subsection_latex {txtblock} {
	global curr_chapter curr_section depth
	set title [lindex $txtblock 0]
	puts "\n[indent]%     -+*|\[ [string toupper $title] \]|*+-\n"
	puts "[indent]\\subsection{[out_latex $title]}\n"
	puts "[indent]\\frame"
	puts "[indent]{"
	incr depth
	puts "[indent]\\frametitle{\\textit{\\small{[out_latex $title]}}}"
	handle_txtblock subsection [lrange $txtblock 2 end]
	incr depth -1
	puts "[indent]}"
}

### ITEMIZE ###
proc process_itemize_latex {txtblock} {
	puts "[indent]\\begin{itemize}\\setlength{\\itemsep}{0pt}"
	handle_txtblock itemize $txtblock
	puts "[indent]\\end{itemize}"
}

### ENUMERATION ###
proc process_enumeration_latex {txtblock} {
	puts "[indent]\\begin{enumerate}\\setlength{\\itemsep}{0pt}"
	handle_txtblock enumeration $txtblock
	puts "[indent]\\end{enumerate}"
}

### IMAGE ###
proc process_image_latex {txtblock} {
	set img_info ""
	set img_size 80
	set img_angle "0"
	regexp {\[(image \w+.*)\]} [lindex $txtblock 0] dummy img_info
	if {$img_info == ""} return
	set img_name [lindex $img_info 1]
	regexp { (\d+)%} $img_info dummy img_size
	regexp { (\d+)°} $img_info dummy img_angle
	
	set img_cap ""
	foreach img_capline $txtblock {
		regsub {^\[.*\]} $img_capline "" img_capline
		regsub {^ *} $img_capline "" img_capline
		append img_cap $img_capline " "
	}
	regsub { *$} $img_cap "" img_cap
	
	puts "[indent]\n[indent]\\begin{figure}\[h\]\n[indent] \\begin{center}"
	puts "[indent]  \\epsfig{file=$img_name,angle=$img_angle,width=[expr $img_size.0/100]\\columnwidth}"
#	puts "[indent]  \\caption{[out_latex $img_cap]}"
#	puts "[indent]  \\label{[label_latex $img_name]}"
	puts "[indent] \\end{center}\n[indent]\\end{figure}\n"
}
